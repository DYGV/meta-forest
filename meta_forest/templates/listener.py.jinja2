import sys
import rclpy
from rclpy.node import Node

from {{ params.ros2_interface_pkg }}.msg import *


class ListenerNode(Node):
    def __init__(self):
        super().__init__("listener")
        self.declare_parameter(
            "fpga_out_topic", "fpga_out_topic_{{ params.head_ip_name }}"
        )
        self.declare_parameter("msg_type_suffix", "1")
        msg_module_str = "{{ params.ros2_interface_pkg }}.msg"
        msg_type_suffix = self.get_parameter("msg_type_suffix").value
        FpgaOut = getattr(
            sys.modules[msg_module_str], "FpgaOut" + msg_type_suffix
        )
        fpga_out_topic = self.get_parameter("fpga_out_topic").value
        self.create_subscription(
            FpgaOut, fpga_out_topic, self.read_node_callback, {{params.qos}}
        )

    def read_node_callback(self, msg):
        self.get_logger().info("Received: {}".format(msg))


def main(args=None):
    rclpy.init(args=args)

    listener = ListenerNode()

    rclpy.spin(listener)

    listener.destroy_node()
    rclpy.shutdown()


if __name__ == "__main__":
    main()
